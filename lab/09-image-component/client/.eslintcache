[{"/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/index.tsx":"1","/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/reportWebVitals.ts":"2","/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/App.tsx":"3","/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/mode.tsx":"4","/home/jing/work/lab-react/lab/09-image-component/client/src/index.tsx":"5","/home/jing/work/lab-react/lab/09-image-component/client/src/reportWebVitals.ts":"6","/home/jing/work/lab-react/lab/09-image-component/client/src/App.tsx":"7","/home/jing/work/lab-react/lab/09-image-component/client/src/component/my-image.tsx":"8"},{"size":500,"mtime":1623842861168,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1623842861168,"results":"11","hashOfConfig":"10"},{"size":1794,"mtime":1624026538740,"results":"12","hashOfConfig":"10"},{"size":1660,"mtime":1624024494431,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1624248050706,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1624248050706,"results":"16","hashOfConfig":"15"},{"size":303,"mtime":1624256138508,"results":"17","hashOfConfig":"15"},{"size":251,"mtime":1624256012564,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1o9xgeu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"773cy0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/index.tsx",[],["40","41"],"/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/reportWebVitals.ts",[],"/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/App.tsx",["42","43"],"import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport MyComponent from './mode';\n\nlet mode:number = 0;\nfunction App() {\n  const url = 'http://192.168.21.14:9000/statusAPI'; // cors\n  const [myMap, setMyMap] = useState(new Map());\n  \n  // Create a ref (in constructor)\n  let mycomonentElement = React.createRef<MyComponent>();\n  \n  const updateMap = (k:string,v:any) => {\n    setMyMap(new Map(myMap.set(k,v)));\n  }\n\n  const onChangeMyComponent = async () => {\n    console.log('onChangeMyComponent')\n    updateTitle('btChangeMyComponentTest.Title', 'Testing');\n\n    // (mycomonentElement.current as MyComponent).changeMyComponent(2);\n    \n    (mycomonentElement.current as MyComponent).changeMyComponent(mode++);\n\n    // let response = await fetch(url);\n    // if (response.ok) { // if HTTP-status is 200-299\n    //   let text = await response.text();\n    //   alert('response = ' + text.slice(0, 80))\n    // } else {\n    //   alert(\"HTTP-Error: \" + response.status);\n    // }\n  }\n\n  function updateTitle(strKeyTitle:string, strValueTitle:string):void{\n    updateMap(strKeyTitle, strValueTitle);\n    setTimeout(() => {\n        updateMap(strKeyTitle, 'Success');\n    }, 2000);\n  }\n\n  function getValue(map:any, key:string, strDefult:any) {\n    return map.get(key) || strDefult;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <MyComponent ref = {mycomonentElement} /> \n          <Button onClick={getValue(myMap, 'btChangeMyComponentTest.onClickedHandler', onChangeMyComponent)} variant=\"contained\" color=\"primary\"> {getValue(myMap, 'btChangeMyComponentTest.Title', 'Test')}</Button>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/jing/work/lab-react/lab/express/02-restfulAPI-react/client/src/mode.tsx",[],"/home/jing/work/lab-react/lab/09-image-component/client/src/index.tsx",[],["44","45"],"/home/jing/work/lab-react/lab/09-image-component/client/src/reportWebVitals.ts",[],"/home/jing/work/lab-react/lab/09-image-component/client/src/App.tsx",["46"],"import React, { useState } from 'react';\nimport './App.css';\nimport MyImage from './component/my-image';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <MyImage/> \n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/jing/work/lab-react/lab/09-image-component/client/src/component/my-image.tsx",["47"],"import React from 'react';\nimport redlight from './res/redlight.svg'\n\nclass MyImage extends React.Component {\n    render() {\n      return (\n        <div>\n          <img src={redlight}></img>\n        </div>\n      );\n    }\n}\n\nexport default MyImage;\n\n\n\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":9,"column":9,"nodeType":"54","messageId":"55","endLine":9,"endColumn":12},{"ruleId":"48","replacedBy":"57"},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","severity":1,"message":"59","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":8,"column":11,"nodeType":"62","endLine":8,"endColumn":31},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.",["63"],["64"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]