[{"/Users/Jing/Desktop/work/lab-react/lab/10-image-component-switch/client/src/App.tsx":"1","/Users/Jing/Desktop/work/lab-react/lab/10-image-component-switch/client/src/component/my-image.tsx":"2","/Users/Jing/Desktop/work/lab-react/lab/10-image-component-switch/client/src/component/my-image2.tsx":"3","/Users/Jing/Desktop/work/lab-react/lab/11-class_component-vs-function_component/client/src/App.tsx":"4","/Users/Jing/Desktop/work/lab-react/lab/11-class_component-vs-function_component/client/src/components/my-class-comp.tsx":"5"},{"size":939,"mtime":1625766760880,"results":"6","hashOfConfig":"7"},{"size":1124,"mtime":1625766160364,"results":"8","hashOfConfig":"7"},{"size":586,"mtime":1625767200985,"results":"9","hashOfConfig":"7"},{"size":960,"mtime":1625768463495,"results":"10","hashOfConfig":"11"},{"size":1124,"mtime":1625768051324,"results":"12","hashOfConfig":"11"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pz7i4l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zhnmb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Jing/Desktop/work/lab-react/lab/10-image-component-switch/client/src/App.tsx",[],"/Users/Jing/Desktop/work/lab-react/lab/10-image-component-switch/client/src/component/my-image.tsx",["25"],"import React from 'react';\n\nimport redlight from './res/redlight-v3.png'\nimport greenlight from './res/greenlight-v3.png'\nimport yellowlight from './res/yellowlight-v3.png'\nclass MyImage extends React.Component {\n    RED_LIGHT = {id:0, strName:'red light', imgSrc: redlight};\n    GREEN_LIGHT = {id:1, strName:'green light', imgSrc: greenlight};\n    Yellow_LIGHT = {id:1, strName:'yellow light', imgSrc: yellowlight};\n\n    state = {\n      data : this.RED_LIGHT,\n    }\n\n    public changeLight = (_id:number) => {\n      switch(_id){\n        case 0:\n          this.setState({data : this.RED_LIGHT});\n          break;\n        case 1: \n          this.setState({data : this.GREEN_LIGHT});\n          break;\n        case 2: \n          this.setState({data : this.Yellow_LIGHT});\n          break;\n        default:\n          alert('Invalid _id, changeLight, MyImage. _id = . Act: use Red Light as default' + _id);\n          this.setState({data : this.RED_LIGHT});\n      }\n    };\n\n    render() {\n      return (\n        <div>\n          <img src={this.state.data.imgSrc} ></img>\n        </div>\n      );\n    }\n}\n\nexport default MyImage;\n\n\n\n","/Users/Jing/Desktop/work/lab-react/lab/10-image-component-switch/client/src/component/my-image2.tsx",["26"],"import React from 'react';\n\nimport redlight from './res/redlight-v3.png'\nimport greenlight from './res/greenlight-v3.png'\nimport yellowlight from './res/yellowlight-v3.png'\n\nfunction MyImage2(props:{id:number}): JSX.Element {\n  console.log('MyImage2::' + JSON.stringify(props));\n\n  let imgSrc:string;\n  switch(props.id){\n    case 0:\n      imgSrc = redlight; break;\n    case 1:\n      imgSrc = greenlight; break;\n    case 2:\n      imgSrc = yellowlight; break;\n    default:\n      imgSrc = redlight; break;\n  }\n\n  return(<div><img src={imgSrc} ></img></div>);\n}\nexport default MyImage2;\n\n\n\n","/Users/Jing/Desktop/work/lab-react/lab/11-class_component-vs-function_component/client/src/App.tsx",[],"/Users/Jing/Desktop/work/lab-react/lab/11-class_component-vs-function_component/client/src/components/my-class-comp.tsx",["27"],{"ruleId":"28","severity":1,"message":"29","line":35,"column":11,"nodeType":"30","endLine":35,"endColumn":46},{"ruleId":"28","severity":1,"message":"29","line":22,"column":15,"nodeType":"30","endLine":22,"endColumn":34},{"ruleId":"28","severity":1,"message":"29","line":35,"column":11,"nodeType":"30","endLine":35,"endColumn":46},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]